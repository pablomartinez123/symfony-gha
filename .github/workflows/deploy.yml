name: CI

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Build, push and deploy
    
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@master

    - name: Composer install
      run: |
        cd www
        composer install

    - name: Test PHP version
      run: |
        php -i

    - name: Run tests
      run: |
        cd www
        php bin/phpunit

#    - name: Login to DockerHub
#      uses: docker/login-action@v1 
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and push to docker
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        file: docker/php-fpm/Dockerfile
#        push: true
#        tags: pablomartinez123/symfony-gha:latest,pablomartinez123/symfony-gha:${{ github.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: symfony-gha
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f docker/php-fpm/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Render Amazon ECS task definition for NGINX
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: .github/workflows/task-definition.json
        container-name: nginx
        image: nginx:1.20-alpine

#    - name: Modify Amazon ECS task definition with PHP-FPM
#      id: render-app-container
#      uses: aws-actions/amazon-ecs-render-task-definition@v1
#      with:
#        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
#        container-name: php-fpm
#        image: pablomartinez123/symfony-gha

    - name: Modify Amazon ECS task definition with PHP-FPM
      id: render-app-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        container-name: php-fpm
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-app-container.outputs.task-definition }}
        service: serviceTest
        cluster: test
        force-new-deployment: true
